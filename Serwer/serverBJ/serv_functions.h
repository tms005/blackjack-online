///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void bbbCharToInt(	char* source,
								int* destination)
{
	int smask,dmask=1;
	*destination=0;
	for(int i=3;i>-1;i--) 
	{
		smask=1;
		for(int j=0;j<8;j++)
		{
			if( *(source+3-i) &smask) *destination |=dmask;
			dmask<<=1;
			smask<<=1;
		}
	}
}


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void bbbIntToChar(int* source,
							char* destination)
{// zalozenie: source to wskaznik na pojedynczy int, zas destination to wskaznik na 4 znaki
for(int x=0;x<4;x++) *(destination+x) =0; // czyszczê przestrzeñ docelow¹
int i;
unsigned int smask=1;
unsigned char dmask;
for(i=0;i<4;i++)
	{
		dmask=1;
		for(int k=0;k<8;k++)
		{
			if((*source) & smask) *(destination+i) |=dmask;
			dmask<<=1;
			smask<<=1;
		}
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int  _2TbbbCharToInt(	char* source,
								int* destination,
								int s_len,
								int d_len)
{																		//zwraca 0 jesli ok -1 jesli blad
	if(s_len== d_len*(sizeof(int)/sizeof(char)) )
	{
	int i;
	for(i=0;i<d_len;i++) 
		{
		bbbCharToInt(source+(i*(sizeof(int)/sizeof(char))), destination+i);

		}
	return 0;
	}
	else return -1;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int  _2TbbbIntToChar(	int* source,
								char* destination,
								int s_len,
								int d_len)
{
	if(d_len== s_len*(sizeof(int)/sizeof(char)) )
	{
		int i;
		for(i=0;i<s_len;i++) 
			{
			bbbIntToChar(source+i, destination+(i*(sizeof(int)/sizeof(char))));
			}
	return 0;
	}
return -1;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void	vAddTerminalChar(char sName[], int len)
	{


	char* c=NULL;
	int tmp=-1;
	for(int i=0;i<len-1;i++)
	{
	if(sName[i]==' ' || sName[i]=='\0')  
		{
			c=sName+i;
			break;
		}
	}
	if(c) 
	{
		if(*c==' ') *c='\0';
	}
	else
	{
	sName[len-1]='\0';
	}
	


}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////